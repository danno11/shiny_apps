shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
x<-seq(0,50, by=1)
y<-dbinom(x,50,.2)
plot(x,y, pch=3, axes = F)
par(new=T)
plot(x,dnorm(x,10,8), type="l", axes = F)
axis(1)
axis(2)
lines(x, y)
plot(x,y,type="h", pch=17, axes = F)
par(new=T)
plot(x,dnorm(x,10,8), type="l", axes = F)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
n<-22
p<-.6
mu<-n*p
sigma<-sqrt(n*p*(1-p))
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,50,.2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin ,y.bin, 0, n, type = "h",
xlim = c(0, n),ylim = c(0,1),ylab="", axes=F, lwd=2,lty=1, col="steelblue")
plot(x.bin ,y.bin, 0, n, type = "h",
xlim = c(0, n),ylim = c(0,1),ylab="", axes=F, lwd=2, col="steelblue")
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,50,.2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin ,y.bin, 0, n, type = "h",
xlim = c(0, n), ylim = c(0,1),ylab="", xlab="",axes=F, lwd=2, col="steelblue")
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,n,.2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin ,y.bin, 0, n, type = "h",
xlim = c(0, n), ylim = c(0,1),ylab="", xlab="",axes=F, lwd=2, col="steelblue")
n<-22
p<-.6
mu<-n*p
sigma<-sqrt(n*p*(1-p))
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,n,p)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin ,y.bin, 0, n, type = "h",
xlim = c(0, n), ylim = c(0,1),ylab="", xlab="",axes=F, lwd=2, col="steelblue")
plot(function(x.bin) dbinom(x.bin, n, p), 0, n, type = "h",
xlim = c(0, n), ylim = c(0,1),ylab="", xlab="",axes=F, lwd=2, col="steelblue")
warnings()
plot(x.bin, y.bin, type = "h")
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h")
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h", axes = F)
axis(1)
axis(2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h", axes = F, xlim = c(0,n), ylim = c(0,1))
axis(1)
axis(2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h", axes = F, xlim = c(0,n), ylim = c(0,1), lwd=2)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h", axes = F, xlim = c(0,n), ylim = c(0,1), lwd=2,col="steelblue")
axis(1)
axis(2)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
n<-32
p<-.4
mu<-n*p
sigma<-sqrt(n*p*(1-p))
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,n,p)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, type = "h", axes = F, xlim = c(0,n), ylim = c(0,1), lwd=2,col="steelblue")
axis(1)
axis(2)
n<-32
p<-.4
mu<-n*p
sigma<-sqrt(n*p*(1-p))
x.bin<-seq(0,n, by=1)
y.bin<-dbinom(x.bin,n,p)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",xlab="",axes=F, lwd=2, lty=2, col="indianred")
par(new=TRUE)
plot(x.bin, y.bin, ylab="",xlab="",type = "h", axes = F, xlim = c(0,n), ylim = c(0,1), lwd=2,col="steelblue")
axis(1)
axis(2)
pbinom(9,n,p)
pnorm(9,mu,sigma)
plot (function( x ) dnorm( x, mean=mu,sd=sigma),
0, n, ylim = c(0,1), xlim = c(0, n),
ylab= "",axes=F, lwd=2, lty=1, col="indianred")
par(new=TRUE)
plot(x.bin ,y.bin, type = "h",
xlim = c(0, n),ylim = c(0,1),ylab="", axes=F, lwd=2,
xlab="", col="steelblue")
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
par(cex.main = 1.5, mar = c(4.0, 4.5, 4.5, 1), mgp = c(3.5, 1, 0), cex.lab = 1.5, font.lab = 2, cex.axis = 1.8, bty = "n", las=1)
par(mar = c(4.0, 4.5, 4.5, 1))
#   par(mar = c(2.5, 0, 0, 0))
x <- seq(-15, 15, by = .001)
y <- dt(x/sdiff, df = 28)
xbar.therapy <- 92
s.therapy <- 8.5
xbar.placebo <- 85
s.placebo <- 9.1
n <- 15
xdiff <- xbar.therapy - xbar.placebo
sdiff <- sqrt((s.therapy^2 + s.placebo^2)/2)*sqrt(2/n)
sdiff <- sqrt(s.therapy^2 + s.placebo^2)/sqrt(n)
muH0 <- 0
muH1 <- 8
t0 <- (xdiff - muH0)/sdiff
par(cex.main = 1.5, mar = c(4.0, 4.5, 4.5, 1), mgp = c(3.5, 1, 0), cex.lab = 1.5, font.lab = 2, cex.axis = 1.8, bty = "n", las=1)
par(mar = c(4.0, 4.5, 4.5, 1))
#   par(mar = c(2.5, 0, 0, 0))
x <- seq(-15, 15, by = .001)
y <- dt(x/sdiff, df = 28)
plot(x, y, type = "l", axes = FALSE, xlab = NA, ylab = NA, xlim = c(-15, 20), lwd = 2)
axis(side = 1, at = seq(-15, 15, by = 5), pos = 0, lwd = 2)
axis(side = 1, at = 7, pos = 0, col = "red4", col.axis = "red4", lwd = 2)
t0 <- xdiff/sdiff
cord.x <- c(t0, seq(t0, 4, 0.001), 4)*sdiff
cord.y <- c(0, dt(seq(t0, 4,0.001), df = 28), 0)
polygon(cord.x, cord.y, col='grey')
cord.x <- c(-4, seq(-4, -t0, 0.001), -t0)*sdiff
cord.y <- c(0, dt(seq(-4, -t0, 0.001), df = 24), 0)
polygon(cord.x, cord.y, col='grey')
abline(v = xdiff, col = "red4", lwd = 2)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
?get
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
adj.norm.p(10,13,11,2,22)
adj.norm.p<-function(lb,ub,mu,sigma,n){
if (lb>0){
lb<-lb-.5
} else{
lb<-0
}
if (ub<n){
ub<-ub+.5
}else{
ub<-n
}
pnorm(ub, mu, sigma)-pnorm(lb, mu, sigma)
}
adj.norm.p(10,13,11,2,22)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shinyapps::showLogs()
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
?print
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
adj.norm.p<-function(lb,ub,mu,sigma,n){
if (lb>0){
lb<-lb-.5
} else{
lb<-0
}
if (ub<n){
ub<-ub+.5
}else{
ub<-n
}
pnorm(ub, mu, sigma)-pnorm(lb, mu, sigma)
}
adj.norm.p(10,13,11,2,22)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
custom.anova<-matrix(paste("Estimate",summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3]),
nrow=1 )
a<-lm(mtcars$wt~mtcars$mpg)
custom.anova<-matrix(paste("Estimate",summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3]),
nrow=1 )
custom.anova
custom.anova<-data.frame("Estimate",summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3]),
custom.anova<-data.frame("Estimate",summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3],
nrow=1 )
custom.anova
custom.anova<-data.frame("Estimate",summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3],
)
?apply
?vapply
summary(a)
custom.anova<-data.frame(Names=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
round(summary(a)$coefficient[1,2],3),summary(a)$coefficient[1,3])
)
custom.anova<-data.frame(Names=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
round(summary(a)$coefficient[2,1])))
custom.anova
round(summary(a)$coefficient[2,1])))
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
round(summary(a)$coefficient[2,1])))
custom.anova
summary(a)
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]))
custom.anova
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard Error = c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),
t-Value = c(summary(a)$coefficient[1,3],
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),
t.Value = c(summary(a)$coefficient[1,3],
summary(a)$coefficient[2,3]),
p.Value = c(summary(a)$coefficient[1,4],
summary(a)$coefficient[2,4]))
custom.anova
round(summary(a)$coefficient,2)
round(summary(a)$coefficient,3)
str(summary(a)$coefficient)
shiny::runApp('R/regression')
shiny::runApp('R/regression')
str(summary(a))
shiny::runApp('R/regression')
summary(a,-fstatistic)
?summary
summary(a)<-summary(a)[-fstatistic]
summary(a)<-summary(a)[-summary(a)$fstatistic]
summary<-summary(a)[-summary(a)$fstatistic]
summary
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),
t.Value = c(summary(a)$coefficient[1,3],
summary(a)$coefficient[2,3]),
p.Value = round(c(summary(a)$coefficient[1,4],
summary(a)$coefficient[2,4]),3)
)
custom.anova
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),
t.Value = c(summary(a)$coefficient[1,3],
summary(a)$coefficient[2,3]),
p.Value = signif(c(summary(a)$coefficient[1,4],
summary(a)$coefficient[2,4])))
custom.anova
custom.anova<-data.frame(Parameters=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = round(c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),3),
t.Value = round(c(summary(a)$coefficient[1,3],
summary(a)$coefficient[2,3]),3),
p.Value = signif(c(summary(a)$coefficient[1,4],
summary(a)$coefficient[2,4])))
custom.anova
custom.anova<-data.frame(NULL=c("intercept", "mpg"),
Estimates=c(summary(a)$coefficient[1,1],
summary(a)$coefficient[2,1]),
Standard.Error = round(c(summary(a)$coefficient[1,2],
summary(a)$coefficient[2,2]),3),
t.Value = round(c(summary(a)$coefficient[1,3],
summary(a)$coefficient[2,3]),3),
p.Value = signif(c(summary(a)$coefficient[1,4],
summary(a)$coefficient[2,4])))
custom.anova
nodata <- data.frame(x= numeric(0), y= integer(0), z = character(0))
nodata
shiny::runApp('R/regression')
shiny::runApp('R/regression')
shiny::runApp('R/regression')
shiny::runApp('R/regression')
q()
shiny::runApp('R/regression')
a<-lm(mtcars$mpg~mtcars$wt)
summary(a)
str(summary(a))
summary(a)$coefficients
summary(a)$r.squared
summary(a)$fstatistic
adj.norm.p<-function(lb,ub,mu,sigma,n){
if (lb!=0){
lb<-lb-.5
} else{
lb<-0
}
if (ub!=n){
ub<-ub+.5
}else{
ub<-n
}
adj.norm.p(10,13,11,2,22)
))
adj.norm.p<-function(lb,ub,mu,sigma,n){
if (lb!=0){
lb<-lb-.5
} else{
lb<-0
}
if (ub!=n){
ub<-ub+.5
}else{
ub<-n
}
}
adj.norm.p(10,13,11,2,22)
adj.norm.p<-function(lb,ub,mu,sigma,n){
if (lb!=0){
lb<-lb-.5
} else{
lb<-0
}
if (ub!=n){
ub<-ub+.5
}else{
ub<-n
}
pnorm(ub, mu, sigma)-pnorm(lb, mu, sigma)
}
adj.norm.p(10,13,11,2,22)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
A<-matrix(1:9,3,3)
A
A<-matrix(1:9,3,3, byrow = T)
A
A<-matrix(1:9,3,3)
B<-matrix(4:15, 4,3)
C<-matrix(8:10, 3,2)
MyList<- list(A,B,C)
MyList
lapply(MyList, "[", ,2)
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
?lines
?dnorm
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
?polygon
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
pnorm(15,10,sqrt(5))
pnorm(15,10,sqrt(5))-pnorm(8,10,sqrt(5))
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
shiny::runApp('R/bin.norm')
getwd()
setwd("~/R/bin.norm")
shinyapps::deployApp()
shinyapps::setAccountInfo(name='dan2160coursepack', token='37EBBF0D925728A3546C7E8D7C1A7102', secret='HJvM2XOtnRpmCvZhemqIAlGIibjVwzdTTeuawFnZ')
shinyapps::deployApp()
shinyapps::deployApp(appName = "bin.norm")
getwd()
setwd("~/R")
setwd("~/bin_norm")
getwd()
setwd("~/bin_norm")
setwd("~/R/bin_norm")
shinyapps::deployApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/R/random')
shiny::runApp('~/R/random')
shiny::runApp('~/R/dist')
shiny::runApp('~/R/dist')
shiny::runApp('~/R/dist')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
