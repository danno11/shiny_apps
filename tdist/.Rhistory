shiny::runApp()
?pt
pt(.975, df = 21)
qt(.975, df = 21)
library(KMsurv)
data("kidtran")
kidtran$time_year<-kidtran$time/365
bandwidths = c(1)
n.points = 100
data = drug6mp[,4:5]
data("drug6mp")
data = drug6mp[,4:5]
library(survival)
haz.est.np=function(data,n.points,b)
{
a=survfit(Surv(data[,1],data[,2])~1,type="flem")
H.na=-log(a$surv)
print(H.na)
m=length(H.na)
h.na=(H.na-c(0,H.na[-m]))
print(h.na)
print(a$time)
points=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
h.est=c()
for (i in 1:n.points)
{
times=a$time[abs(points[i]-a$time)<=b]
haz=h.na[abs(points[i]-a$time)<=b]
h.est[i]=sum(1.465*dnorm((times-points[i])/b)*haz)/b
}
list(time=points[-n.points],h.est=h.est)
}
cho<-haz.est.np(data, n.points, 1)
cho$h.est
a<-survfit(Surv(data[,1],data[,2])~1,type="flem")
point=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
H.na=-log(a$surv)
m=length(H.na)
tildh_i<-(H.na-c(0,H.na[-m]))
hazhat<-NA
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
g<-1
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
haz.est.np=function(data,n.points,b)
{
a=survfit(Surv(data[,1],data[,2])~1,type="flem")
H.na=-log(a$surv)
print(H.na)
m=length(H.na)
h.na=(H.na-c(0,H.na[-m]))
print(h.na)
print(a$time)
points=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
h.est=c()
for (i in 1:n.points)
{
times=a$time[abs(points[i]-a$time)<=b]
haz=h.na[abs(points[i]-a$time)<=b]
h.est[i]=sum(.75*(1-((times-points[i])/b)^2*haz))/b
}
list(time=points[-n.points],h.est=h.est)
}
cho<-haz.est.np(data, n.points, 1)
cho$h.est
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
kern = ".75*(1-x^2)"
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
hazhat
cho$h.est
h.na=(H.na-c(0,H.na[-m]))
tildh_i
h.na
i<-29
x<-(times-point[i])/bandwidths[g]
x
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
x
times=a$time[abs(points[i]-a$time)<=b]
points=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
times=a$time[abs(points[i]-a$time)<=b]
b<-1
times=a$time[abs(points[i]-a$time)<=b]
haz=h.na[abs(points[i]-a$time)<=b]
h.est[i]=sum(.75*(1-((times-points[i])/b)^2*haz))/b
h.est=c()
h.est[i]=sum(.75*(1-((times-points[i])/b)^2*haz))/b
h.est[20]
h.est[29]
hazhat<-NA
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
hazhat[29]
(times-points[i])/b)
(times-points[i])/b)
(times-points[i])/b
x
-.44^2
kern = ".75*(1-(x)^2)"
x<-(times-point[i])/bandwidths[g]
hazh=eval(parse(text = paste(kern)))*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
hazhat[29]
1-.44^2
.8064*.75
optimal_band<-function(data, n.points, bandwidths, kern = ".75*(1-(x)^2)"){
library(survival)
minimizing_func<-NA
part1<-NA
part2<-NA
for(g in 1:length(bandwidths)){
a<-survfit(Surv(data[,1],data[,2])~1,type="flem")
point=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
H.na=-log(a$surv)
m=length(H.na)
tildh_i<-(H.na-c(0,H.na[-m]))
hazhat<-NA
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=.75*(1-x^2)*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
hsq<-hazhat^2
uivec<-(point[-1] - point[-length(point)])/2
hsq_sum<-hsq[-length(hsq)] + hsq[-1]
part1[g]<-sum(hsq_sum*uivec)
store_var<-NA
for (k in 1:length(a$time)){
times=a$time[(a$time[k]-a$time)>=-1*bandwidths[g] & (a$time[k] - a$time)<=0]
haz=tildh_i[(a$time[k]-a$time)>=-1*bandwidths[g] & (a$time[k] - a$time)<=0]
if(length(times)>1){
x<-(times[1] - times[-1])/bandwidths[g]
kernvec<-eval(parse(text = paste(kern)))
delta_prod<-haz[1]*haz[-1]
i_not_j<-kernvec*delta_prod
store_var[k]<-sum(i_not_j)
} else{
store_var[k]<-0
}
}
part2[g]<- -2/bandwidths[g]*sum(store_var)
minimizing_func[g]<-part1[g]+part2[g]
}
best_bandwidth<-min(minimizing_func)
b_mat<-cbind(bandwidths, minimizing_func)
return(list(best_bandwidth = best_bandwidth, b_mat = b_mat, store_var = store_var, trap_integral = part1,
part2 = part2, hazhat = hazhat))
}
btest<-optimal_band(data = drug6mp[,4:5], n.points = 100, bandwidths = seq(1,10,1), kern = ".75*(1-x^2)")
rm(list = ls())
optimal_band<-function(data, n.points, bandwidths, kern = ".75*(1-(x)^2)"){
library(survival)
minimizing_func<-NA
part1<-NA
part2<-NA
for(g in 1:length(bandwidths)){
a<-survfit(Surv(data[,1],data[,2])~1,type="flem")
point=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
H.na=-log(a$surv)
m=length(H.na)
tildh_i<-(H.na-c(0,H.na[-m]))
hazhat<-NA
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=.75*(1-x^2)*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
hsq<-hazhat^2
uivec<-(point[-1] - point[-length(point)])/2
hsq_sum<-hsq[-length(hsq)] + hsq[-1]
part1[g]<-sum(hsq_sum*uivec)
store_var<-NA
for (k in 1:length(a$time)){
times=a$time[(a$time[k]-a$time)>=-1*bandwidths[g] & (a$time[k] - a$time)<=0]
haz=tildh_i[(a$time[k]-a$time)>=-1*bandwidths[g] & (a$time[k] - a$time)<=0]
if(length(times)>1){
x<-(times[1] - times[-1])/bandwidths[g]
kernvec<-eval(parse(text = paste(kern)))
delta_prod<-haz[1]*haz[-1]
i_not_j<-kernvec*delta_prod
store_var[k]<-sum(i_not_j)
} else{
store_var[k]<-0
}
}
part2[g]<- -2/bandwidths[g]*sum(store_var)
minimizing_func[g]<-part1[g]+part2[g]
}
best_bandwidth<-min(minimizing_func)
b_mat<-cbind(bandwidths, minimizing_func)
return(list(best_bandwidth = best_bandwidth, b_mat = b_mat, store_var = store_var, trap_integral = part1,
part2 = part2, hazhat = hazhat))
}
btest<-optimal_band(data = drug6mp[,4:5], n.points = 100, bandwidths = seq(1,10,1), kern = ".75*(1-x^2)")
data("drug6mp")
btest<-optimal_band(data = drug6mp[,4:5], n.points = 100, bandwidths = seq(1,10,1), kern = ".75*(1-x^2)")
data = drug6mp[,4:5]
n.points = 100
bandwidths = c(1)
a<-survfit(Surv(data[,1],data[,2])~1,type="flem")
point=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
H.na=-log(a$surv)
m=length(H.na)
tildh_i<-(H.na-c(0,H.na[-m]))
hazhat<-NA
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=.75*(1-x^2)*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
g<-1
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazh=.75*(1-x^2)*haz
hazhat[i]<-sum(hazh)/bandwidths[g]
}
hazhat
haz
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazhat[i]<-sum(.75*(1-x^2)*haz)/bandwidths[g]
}
hazhat
for(i in 1:n.points){
times=a$time[abs(point[i]-a$time)<=bandwidths[g]]
haz=tildh_i[abs(point[i]-a$time)<=bandwidths[g]]
x<-(times-point[i])/bandwidths[g]
hazhat[i]<-sum(.75*(1-((times-point[i])/bandwidths[g])^2*haz))/bandwidths[g]
}
hazhat
cho$h.est
haz.est.np=function(data,n.points,b)
{
a=survfit(Surv(data[,1],data[,2])~1,type="flem")
H.na=-log(a$surv)
print(H.na)
m=length(H.na)
h.na=(H.na-c(0,H.na[-m]))
print(h.na)
print(a$time)
points=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
h.est=c()
for (i in 1:n.points)
{
times=a$time[abs(points[i]-a$time)<=b]
haz=h.na[abs(points[i]-a$time)<=b]
h.est[i]=sum(.75*(1-((times-points[i])/b)^2*haz))/b
}
list(time=points[-n.points],h.est=h.est)
}
cho<-haz.est.np(data, n.points, b = 1)
cho$h.est
hsq<-hazhat^2
uivec<-(point[-1] - point[-length(point)])/2
hsq_sum<-hsq[-length(hsq)] + hsq[-1]
part1[g]<-sum(hsq_sum*uivec)
uivec<-(point[-1] - point[-length(point)])/2
length(uivec)
length(point)
points=(0:n.points)/n.points*max(data[,1]*(data[,2]==1))
length(points)
hsq<-c(0,hazhat^2)
uivec<-(point[-1] - point[-length(point)])/2
hsq_sum<-hsq[-length(hsq)] + hsq[-1]
part1[g]<-sum(hsq_sum*uivec)
part1<-NA
hsq<-c(0,hazhat^2)
uivec<-(point[-1] - point[-length(point)])/2
hsq_sum<-hsq[-length(hsq)] + hsq[-1]
part1[g]<-sum(hsq_sum*uivec)
part1[1]
q()
